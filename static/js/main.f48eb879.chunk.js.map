{"version":3,"sources":["serviceWorker.js","P5Wrapper.js","randomCircles/sketch.js","randomCircles/index.js","Gameboard.js","logic.js","Scoreboard.js","App.js","theme.js","index.js"],"names":["Boolean","window","location","hostname","match","P5Wrapper","this","canvas","p5","props","sketch","wrapper","myCustomRedrawAccordingToNewPropsHandler","newprops","shouldRedrawOnPropsChange","remove","_this","react_default","a","createElement","style","ref","Component","options","undrawnCircles","width","innerWidth","height","innerHeight","frameCount","addEventListener","resizeCanvas","setup","createCanvas","draw","noStroke","newCircles","i","length","circle","newRatio","rRatio","fill","apply","Object","toConsumableArray","colours","ellipse","r","push","circleWidth","random","circleHeight","App","useEffect","removeEventListener","src_P5Wrapper","position","Board","styled","div","withConfig","displayName","componentId","BoardContainer","TileRow","Tile","theme","tileBackground","tileFont","OSVGKeyframes","keyframes","_templateObject","OSVG","svg","OTileFont","O","viewBox","cx","cy","strokeWidth","XSVGKeyframes","_templateObject2","XLine1","line","XTileFont","XLine2","X","x1","y1","x2","y2","renderTileText","tile","Gameboard_X","Gameboard_O","GameBoard","_ref","board","onClick","calculateWinner","lines","_lines$i","slicedToArray","b","c","isDraw","ScoreboardContainer","containerWidth","scoreboardContainerBackground","ScoreTile","scoreFont","scoreboardMessageKeyFrames","Scoreboard_templateObject","ScoreboardMessage","scoreboardMessageBackground","winner","PrimaryButton","button","primaryButton","ScoreboardCentre","Scoreboard","currentPlayer","_useState","useState","_useState2","setContainerWidth","containerRef","useRef","handleResize","current","getBoundingClientRect","Scoreboard_Board","score","handleResetGame","emptyBoard","Array","AppContainer","appBackground","hasAppRendered","setBoard","_useState3","_useState4","setCurrentPlayer","_useState5","_useState6","setScore","_useState7","_useState8","setHasAppRendered","randomCircles","Gameboard","tileIndex","newBoard","slice","nextPlayer","calculateNextPlayerTurn","newWinner","newScore","src_Scoreboard","ReactDOM","render","styled_components_browser_esm","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f48eb879.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport p5 from \"p5\";\r\n\r\n// @Cleanup - refactor into this https://github.com/PARC6502/basic-p5-react/blob/master/src/presenter/Sketch.jsx\r\nclass P5Wrapper extends Component {\r\n  componentDidMount() {\r\n    this.canvas = new p5(this.props.sketch, this.wrapper);\r\n    if (this.canvas.myCustomRedrawAccordingToNewPropsHandler) {\r\n      this.canvas.myCustomRedrawAccordingToNewPropsHandler(this.props);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newprops) {\r\n    if (\r\n      this.props.shouldRedrawOnPropsChange &&\r\n      this.props.sketch !== newprops.sketch\r\n    ) {\r\n      this.canvas.remove();\r\n      this.canvas = new p5(newprops.sketch, this.wrapper);\r\n    }\r\n    if (this.canvas.myCustomRedrawAccordingToNewPropsHandler) {\r\n      this.canvas.myCustomRedrawAccordingToNewPropsHandler(newprops);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.canvas.remove();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.props.style} ref={wrapper => (this.wrapper = wrapper)} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default P5Wrapper;\r\n","const sketch = (p5, options) => {\r\n  let undrawnCircles = [];\r\n\r\n  let width = window.innerWidth;\r\n  let height = window.innerHeight;\r\n  let frameCount = 0;\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    p5.resizeCanvas(window.innerWidth, window.innerHeight);\r\n    width = window.innerWidth;\r\n    height = window.innerHeight;\r\n  });\r\n\r\n  p5.setup = () => {\r\n    p5.createCanvas(width, height);\r\n  };\r\n\r\n  p5.draw = () => {\r\n    p5.noStroke();\r\n\r\n    const newCircles = [];\r\n\r\n    for (let i = 0; i < undrawnCircles.length; i++) {\r\n      const circle = undrawnCircles[i];\r\n      const newRatio = circle.rRatio + 0.001;\r\n      if (newRatio > 1) {\r\n        break;\r\n      }\r\n\r\n      p5.fill(...circle.colours);\r\n      p5.ellipse(circle.width, circle.height, circle.r * newRatio);\r\n      newCircles.push({\r\n        width: circle.width,\r\n        height: circle.height,\r\n        r: circle.r,\r\n        colours: circle.colours,\r\n        rRatio: newRatio\r\n      });\r\n    }\r\n\r\n    undrawnCircles = newCircles;\r\n\r\n    if (frameCount % 8 === 0) {\r\n      const circleWidth = p5.random(width);\r\n      const circleHeight = p5.random(height);\r\n      const ratio = 0.1;\r\n      const r = p5.random(20, (width * height) / 5000);\r\n      p5.ellipse(circleWidth, circleHeight, r * ratio);\r\n      const colours = [\r\n        p5.random(100, 255),\r\n        p5.random(100, 255),\r\n        p5.random(100, 255)\r\n      ];\r\n      p5.fill(...colours);\r\n      undrawnCircles.push({\r\n        r,\r\n        rRatio: ratio,\r\n        width: circleWidth,\r\n        height: circleHeight,\r\n        colours\r\n      });\r\n    }\r\n\r\n    frameCount += 1;\r\n  };\r\n};\r\n\r\nexport default sketch;\r\n","import React, { useEffect } from \"react\";\n\nimport P5Wrapper from \"../P5Wrapper\";\nimport sketch from \"./sketch\";\n\nconst App = () => {\n  useEffect(() => {\n    return () => {\n      window.removeEventListener(\"resize\", () => {});\n    };\n  });\n\n  return (\n    <P5Wrapper\n      // @Incomplete - do we need to put p5 in here?\n      sketch={p5 => sketch(p5)}\n      style={{ position: \"absolute\" }}\n    />\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components/macro\";\r\n\r\nconst Board = styled.div`\r\n  width: 95%;\r\n  margin: 0 auto;\r\n  max-width: 450px;\r\n`;\r\n\r\nconst BoardContainer = styled.div`\r\n  width: 100%;\r\n  padding-top: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst TileRow = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 33.33%;\r\n  top: ${props => props.i * 33.33}%;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst Tile = styled.div`\r\n  padding: 5%;\r\n  width: 33.33%;\r\n  margin: 3%;\r\n  background-color: ${props => props.theme.colours.tileBackground};\r\n  color: ${props => props.theme.colours.tileFont};\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OSVGKeyframes = keyframes`\r\nto {\r\n  stroke-dashoffset: 0;\r\n}`;\r\n\r\nconst OSVG = styled.svg`\r\n  stroke-dasharray: 1000;\r\n  stroke-dashoffset: 1000;\r\n  animation: ${OSVGKeyframes} 0.7s ease-in forwards;\r\n  stroke: ${props => props.theme.colours.OTileFont};\r\n`;\r\n\r\nconst O = () => (\r\n  <OSVG viewBox=\"0 0 100 100\">\r\n    <circle cx=\"50\" cy=\"50\" r=\"45\" strokeWidth=\"10\" fill=\"none\" />\r\n  </OSVG>\r\n);\r\n\r\nconst XSVGKeyframes = keyframes`\r\n  to {\r\n    stroke-dashoffset: 0;\r\n  }\r\n`;\r\n\r\nconst XLine1 = styled.line`\r\n  stroke-dasharray: 1000;\r\n  stroke-dashoffset: 1000;\r\n  animation: ${XSVGKeyframes} 0.4s ease-in forwards;\r\n  stroke: ${props => props.theme.colours.XTileFont};\r\n`;\r\n\r\nconst XLine2 = styled.line`\r\n  stroke-dasharray: 1000;\r\n  stroke-dashoffset: 1000;\r\n  animation: ${XSVGKeyframes} 0.4s ease-in forwards;\r\n  stroke: ${props => props.theme.colours.XTileFont};\r\n  animation-delay: 0.2s;\r\n`;\r\n\r\nconst X = () => (\r\n  <svg viewBox=\"0 0 100 100\">\r\n    <XLine1 x1=\"5\" y1=\"5\" x2=\"95\" y2=\"95\" strokeWidth=\"10\" />\r\n    <XLine2 x1=\"95\" y1=\"5\" x2=\"5\" y2=\"95\" strokeWidth=\"10\" />\r\n  </svg>\r\n);\r\n\r\nconst renderTileText = tile => {\r\n  switch (tile) {\r\n    case \"X\":\r\n      return <X />;\r\n    case \"O\":\r\n      return <O />;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nconst GameBoard = ({ board, onClick }) => {\r\n  return (\r\n    <Board>\r\n      <BoardContainer>\r\n        <TileRow i={0}>\r\n          <Tile onClick={onClick(0)}>{renderTileText(board[0])}</Tile>\r\n          <Tile onClick={onClick(1)}>{renderTileText(board[1])}</Tile>\r\n          <Tile onClick={onClick(2)}>{renderTileText(board[2])}</Tile>\r\n        </TileRow>\r\n        <TileRow i={1}>\r\n          <Tile onClick={onClick(3)}>{renderTileText(board[3])}</Tile>\r\n          <Tile onClick={onClick(4)}>{renderTileText(board[4])}</Tile>\r\n          <Tile onClick={onClick(5)}>{renderTileText(board[5])}</Tile>\r\n        </TileRow>\r\n        <TileRow i={2}>\r\n          <Tile onClick={onClick(6)}>{renderTileText(board[6])}</Tile>\r\n          <Tile onClick={onClick(7)}>{renderTileText(board[7])}</Tile>\r\n          <Tile onClick={onClick(8)}>{renderTileText(board[8])}</Tile>\r\n        </TileRow>\r\n      </BoardContainer>\r\n    </Board>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n","const X_TILE = \"X\";\r\nconst O_TILE = \"O\";\r\n\r\nexport const calculateNextPlayerTurn = currentPlayer =>\r\n  currentPlayer === X_TILE ? O_TILE : X_TILE;\r\n\r\nexport const calculateWinner = board => {\r\n  // check for winner\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n      return board[a];\r\n    }\r\n  }\r\n\r\n  let isDraw = true;\r\n\r\n  for (let i = 0; i < board.length; i++) {\r\n    if (board[i] == null) {\r\n      isDraw = false;\r\n    }\r\n  }\r\n\r\n  return isDraw ? \"draw\" : null;\r\n};\r\n\r\nexport const generateScoreboadMessage = (winner, currentPlayer) => {\r\n  if (winner == null) {\r\n    return currentPlayer + \"'s Turn\";\r\n  } else {\r\n    return winner === \"draw\" ? \"It's a draw!\" : winner + \"  Wins!\";\r\n  }\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components/macro\";\r\n\r\nimport { generateScoreboadMessage } from \"./logic\";\r\n\r\nconst Board = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  max-width: 425px;\r\n`;\r\n\r\nconst ScoreboardContainer = styled.div`\r\n  width: 100%;\r\n  height: ${props => props.containerWidth / 3.4}px;\r\n  background-color: ${props =>\r\n    props.theme.colours.scoreboardContainerBackground};\r\n  border-radius: 10px;\r\n  font-family: digital-clock-font;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 4%;\r\n`;\r\n\r\nconst ScoreTile = styled.div`\r\n  color: ${props => props.theme.colours.scoreFont};\r\n  font-size: ${props => props.containerWidth / 4}px;\r\n  line-height: ${props => props.containerWidth / 4}px;\r\n  border-radius: 1vw;\r\n  text-align: center;\r\n  width: 15%;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst scoreboardMessageKeyFrames = keyframes`\r\nfrom,\r\n  29.9% {\r\n    opacity: 0;\r\n  }\r\n  30%,\r\n  to {\r\n    opacity: 1;\r\n  }\r\n\r\n`;\r\n\r\nconst ScoreboardMessage = styled.div`\r\n  color: ${props => props.theme.colours.scoreboardMessageBackground};\r\n  font-size: ${props => props.containerWidth / 8}px;\r\n  line-height: ${props => props.containerWidth / 8}px;\r\n  animation: ${props => props.winner != null && scoreboardMessageKeyFrames} 1s\r\n    linear infinite;\r\n  padding-bottom: ${props => props.containerWidth / 100}px;\r\n`;\r\n\r\nconst PrimaryButton = styled.button`\r\n  width: 45%;\r\n  height: ${props => props.containerWidth / 15}px;\r\n  position: relative;\r\n  background: none;\r\n  color: ${props => props.theme.colours.primaryButton};\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  border: 0.1em solid ${props => props.theme.colours.primaryButton};\r\n  outline: none;\r\n  font-family: digital-clock-font;\r\n  font-size: ${props => props.containerWidth / 20}px;\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 10%;\r\n    background: ${props => props.theme.colours.scoreboardContainerBackground};\r\n    height: 0.11em;\r\n    right: 20%;\r\n    top: -0.1em;\r\n    transform: skewX(-45deg);\r\n    -webkit-transition: all 0.45s cubic-bezier(0.86, 0, 0.07, 1);\r\n    transition: all 0.45s cubic-bezier(0.86, 0, 0.07, 1);\r\n  }\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 10%;\r\n    background: ${props => props.theme.colours.scoreboardContainerBackground};\r\n    height: 0.11em;\r\n    left: 20%;\r\n    bottom: -0.1em;\r\n    transform: skewX(45deg);\r\n    -webkit-transition: all 0.45 cubic-bezier(0.86, 0, 0.07, 1);\r\n    transition: all 0.45s cubic-bezier(0.86, 0, 0.07, 1);\r\n  }\r\n  &:hover {\r\n    &::before {\r\n      right: 80%;\r\n    }\r\n    &::after {\r\n      left: 80%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ScoreboardCentre = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: space-evenly;\r\n  flex: 1;\r\n`;\r\n\r\nconst Scoreboard = props => {\r\n  const [containerWidth, setContainerWidth] = useState();\r\n  const containerRef = useRef(null);\r\n\r\n  // @Question - maybe use this instead? https://reactjs.org/docs/forwarding-refs.html\r\n  // @Cleanup - make reusable and use in the game board\r\n  useEffect(() => {\r\n    const handleResize = () =>\r\n      setContainerWidth(containerRef.current.getBoundingClientRect().width);\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Board ref={containerRef}>\r\n      <ScoreboardContainer containerWidth={containerWidth}>\r\n        <ScoreTile containerWidth={containerWidth}>{props.score[0]}</ScoreTile>\r\n        {/* @Cleanup - use styled components */}\r\n        <ScoreboardCentre>\r\n          <ScoreboardMessage\r\n            containerWidth={containerWidth}\r\n            winner={props.winner}\r\n          >\r\n            {generateScoreboadMessage(props.winner, props.currentPlayer)}\r\n          </ScoreboardMessage>\r\n          <PrimaryButton\r\n            onClick={props.handleResetGame}\r\n            containerWidth={containerWidth}\r\n          >\r\n            {props.winner == null ? \"Reset\" : \"Start\"}\r\n          </PrimaryButton>\r\n        </ScoreboardCentre>\r\n        <ScoreTile containerWidth={containerWidth}>{props.score[1]}</ScoreTile>\r\n      </ScoreboardContainer>\r\n    </Board>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport BackgroundAnimation from \"./randomCircles\";\r\nimport Gameboard from \"./Gameboard\";\r\nimport Scoreboard from \"./Scoreboard\";\r\n\r\nimport { calculateWinner, calculateNextPlayerTurn } from \"./logic\";\r\n\r\nconst emptyBoard = Array(9).fill(null);\r\n\r\n// @Cleanup - duplicate\r\nconst X_TILE = \"X\";\r\n\r\nconst AppContainer = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  margin: auto;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  border-radius: 10px;\r\n  padding-bottom: 2.5%;\r\n  justify-content: center;\r\n  user-select: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: ${props => props.theme.colours.appBackground};\r\n  ${props => props.hasAppRendered && \"visibility: hidden;\"}\r\n\r\n  @media (max-width: 520px) {\r\n    border-radius: 0px;\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const [board, setBoard] = useState(emptyBoard);\r\n  const [currentPlayer, setCurrentPlayer] = useState(X_TILE);\r\n  const [score, setScore] = useState([0, 0]);\r\n  const [hasAppRendered, setHasAppRendered] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // let the component full mount before displaying UI so that dims can be calculated\r\n    setHasAppRendered(false);\r\n  }, []);\r\n\r\n  const winner = calculateWinner(board);\r\n\r\n  // setting the state multiple times is fine\r\n  const handleClickTile = tileIndex => () => {\r\n    if (winner != null || board[tileIndex] != null) {\r\n      return;\r\n    }\r\n\r\n    // set new board\r\n    const newBoard = board.slice(0);\r\n    newBoard[tileIndex] = currentPlayer;\r\n    setBoard(newBoard);\r\n\r\n    // set player turn\r\n    const nextPlayer = calculateNextPlayerTurn(currentPlayer);\r\n    setCurrentPlayer(nextPlayer);\r\n\r\n    // set scoreboard if needed\r\n    const newWinner = calculateWinner(newBoard);\r\n    if (newWinner != null && newWinner !== \"draw\") {\r\n      const newScore =\r\n        newWinner === X_TILE\r\n          ? [score[0] + 1, score[1]]\r\n          : [score[0], score[1] + 1];\r\n      setScore(newScore);\r\n    }\r\n  };\r\n\r\n  const handleResetGame = () => {\r\n    setBoard(emptyBoard);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BackgroundAnimation />\r\n      <AppContainer hasAppRendered={hasAppRendered}>\r\n        <Gameboard board={board} onClick={handleClickTile} />\r\n        <br />\r\n        <Scoreboard\r\n          score={score}\r\n          winner={winner}\r\n          currentPlayer={currentPlayer}\r\n          handleResetGame={handleResetGame}\r\n        />\r\n      </AppContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const primary = \"#e2ab5b\";\r\nconst secondary = \"#DEC9C5\";\r\nconst tertiary = \"#483F54\";\r\nconst quaternary = \"#7ea951\";\r\nconst quinary = \"#7B6287\";\r\n\r\nexport default {\r\n  colours: {\r\n    appBackground: quinary,\r\n    tileBackground: tertiary,\r\n    XTileFont: secondary,\r\n    OTileFont: quaternary,\r\n    scoreboardContainerBackground: tertiary,\r\n    scoreboardMessageBackground: primary,\r\n    primaryButton: primary,\r\n    scoreFont: primary\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}